{
  "code": "import * as tslib_1 from \"tslib\";\r\nvar Behaviour = (function (_super) {\r\n    tslib_1.__extends(Behaviour, _super);\r\n    function Behaviour() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.isAwake = false;\r\n        _this.isStart = false;\r\n        _this.isEnable = false;\r\n        _this.isDestroy = false;\r\n        return _this;\r\n    }\r\n    Behaviour.prototype.OnAwake = function () { };\r\n    Behaviour.prototype.OnStart = function () { };\r\n    Behaviour.prototype.OnUpdate = function () { };\r\n    Behaviour.prototype.OnEnable = function () { };\r\n    Behaviour.prototype.OnDisable = function () { };\r\n    Behaviour.prototype.OnDestroy = function () { };\r\n    Behaviour.prototype.DoAwake = function () {\r\n        if (!this.active)\r\n            return;\r\n        if (!this.isAwake) {\r\n            this.isAwake = true;\r\n            this.OnAwake();\r\n        }\r\n    };\r\n    Behaviour.prototype.DoStart = function () {\r\n        if (!this.active)\r\n            return;\r\n        if (!this.isStart) {\r\n            this.isStart = true;\r\n            this.OnStart();\r\n        }\r\n    };\r\n    Behaviour.prototype.DoUpdate = function () {\r\n        if (!this.active)\r\n            return;\r\n        if (this.isStart) {\r\n            this.OnUpdate();\r\n        }\r\n    };\r\n    Behaviour.prototype.DoEnable = function () {\r\n        if (!this.active)\r\n            return;\r\n        if (!this.isEnable) {\r\n            this.isEnable = true;\r\n            this.OnEnable();\r\n        }\r\n    };\r\n    Behaviour.prototype.DoDisable = function () {\r\n        if (this.isEnable) {\r\n            this.isEnable = false;\r\n            this.OnDisable();\r\n        }\r\n    };\r\n    Behaviour.prototype.DoDestroy = function () {\r\n        if (!this.isDestroy) {\r\n            this.isDestroy = true;\r\n            this.OnDestroy();\r\n        }\r\n    };\r\n    Behaviour.prototype.onAwake = function () {\r\n        this.DoAwake();\r\n    };\r\n    Behaviour.prototype.onStart = function () {\r\n        this.DoAwake();\r\n        this.DoStart();\r\n    };\r\n    Behaviour.prototype.onUpdate = function () {\r\n        this.DoAwake();\r\n        this.DoEnable();\r\n        this.DoStart();\r\n        this.DoUpdate();\r\n    };\r\n    Behaviour.prototype.onEnable = function () {\r\n        this.DoAwake();\r\n        this.DoEnable();\r\n        this.DoStart();\r\n    };\r\n    Behaviour.prototype.onDisable = function () {\r\n        this.DoDisable();\r\n    };\r\n    Behaviour.prototype.onDestroy = function () {\r\n        this.DoDestroy();\r\n    };\r\n    Behaviour.SetActive = function (node, value) {\r\n        if (node == null)\r\n            return;\r\n        node.active = value;\r\n        if (node instanceof Laya.Box) {\r\n            node.visible = value;\r\n        }\r\n    };\r\n    Behaviour.GetActive = function (node) {\r\n        if (node == null)\r\n            return false;\r\n        if (!node.active)\r\n            return false;\r\n        if (node instanceof Laya.Box) {\r\n            if (!node.visible)\r\n                return false;\r\n        }\r\n        return true;\r\n    };\r\n    Object.defineProperty(Behaviour.prototype, \"active\", {\r\n        get: function () {\r\n            return Behaviour.GetActive(this.owner);\r\n        },\r\n        set: function (value) {\r\n            Behaviour.SetActive(this.owner, value);\r\n            if (value) {\r\n                this.DoEnable();\r\n            }\r\n            else {\r\n                this.DoDisable();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Behaviour;\r\n}(Laya.Script));\r\nexport default Behaviour;\r\n",
  "references": []
}
