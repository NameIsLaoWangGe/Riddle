{
  "code": "import { lwg } from \"../Lwg_Template/lwg\";\r\nexport default class UIMain_Aisle extends Laya.Script {\r\n    constructor() {\r\n        super();\r\n        this.openSwitch = false;\r\n        this.connectRoom = null;\r\n        this.onOff = false;\r\n    }\r\n    onEnable() {\r\n        this.self = this.owner;\r\n        this.self['UIMain_Aisle'] = this;\r\n        this.interactionPicStyle('exit');\r\n    }\r\n    onTriggerEnter(other, self) {\r\n        let otherName = other.owner.name;\r\n        let selfName = this.self.name;\r\n        if (other.label === 'aisle') {\r\n            this.interactionPicStyle('enter');\r\n            this.connectRoom = other.owner.parent;\r\n            this.oppositeAisle = other.owner;\r\n            this.roomAdsorption();\r\n        }\r\n    }\r\n    interactionPicStyle(type) {\r\n        let interaction = this.self.getChildByName('interaction');\r\n        let url1 = 'UI/40bacf8d-b069-4dc3-9d5e-ef2388ac0475.png';\r\n        let url2 = 'UI/a9ac4633-ecea-444b-a066-86ee56f38166.png';\r\n        if (type === 'enter') {\r\n            interaction.skin = url2;\r\n        }\r\n        else if (type === 'exit') {\r\n            interaction.skin = url1;\r\n        }\r\n    }\r\n    roomAdsorption() {\r\n        let posX = this.oppositeAisle.x + this.connectRoom.x - this.connectRoom.width / 2;\r\n        let posY = this.oppositeAisle.y + this.connectRoom.y - this.connectRoom.height / 2;\r\n        let parent = this.self.parent;\r\n        let selfX = this.self.x + parent.x - parent.width / 2;\r\n        ;\r\n        let selfY = this.self.y + parent.y - parent.height / 2;\r\n        ;\r\n        let diffX = posX - selfX;\r\n        let diffY = posY - selfY;\r\n        let _roomMove = parent['UIMain_Room']._roomMove;\r\n        if (!_roomMove && lwg.Global._roomPickup === parent) {\r\n            parent.x += diffX;\r\n            parent.y += diffY;\r\n            parent['UIMain_Room']._roomMove = false;\r\n            lwg.Global._roomPickup = null;\r\n        }\r\n        if (Math.abs(diffX) > 10 || Math.abs(diffY) > 10) {\r\n            this.openSwitch = false;\r\n        }\r\n        else {\r\n            this.openSwitch = true;\r\n        }\r\n    }\r\n    styleChanges() {\r\n        let interaction = this.self.getChildByName('interaction');\r\n        let color = this.self.getChildByName('color');\r\n        let wall = this.self.getChildByName('wall');\r\n        if (this.openSwitch) {\r\n            interaction.alpha = 0;\r\n            color.alpha = 0;\r\n            wall.alpha = 1;\r\n        }\r\n        else {\r\n            interaction.alpha = 1;\r\n            color.alpha = 1;\r\n            wall.alpha = 0;\r\n        }\r\n    }\r\n    onTriggerExit(other, self) {\r\n        let otherName = other.owner.name;\r\n        let selfName = this.self.name;\r\n        if (other.label === 'aisle') {\r\n            this.interactionPicStyle('exit');\r\n            this.openSwitch = false;\r\n            this.connectRoom = null;\r\n            this.oppositeAisle = null;\r\n        }\r\n    }\r\n    onUpdate() {\r\n        if (this.connectRoom && this.oppositeAisle) {\r\n            this.roomAdsorption();\r\n        }\r\n        this.styleChanges();\r\n    }\r\n    onDisable() {\r\n    }\r\n}\r\n",
  "references": [
    "D:/Game/project/Riddle/Riddle/src/script/Lwg_Template/lwg.ts"
  ]
}
